{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.trim-end.js","webpack:///./node_modules/@deckdeckgo/highlight-code/dist/esm-es5/shadow-css-c63963b5.js","webpack:///./node_modules/core-js/internals/to-string.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/core-js/internals/string-trim-end.js","webpack:///./node_modules/core-js/internals/string-trim-forced.js","webpack:///./node_modules/core-js/modules/es.string.trim-right.js"],"names":["$","trimEnd","target","proto","name","forced","__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","_commentWithHashRe","_ruleRe","_curlyRe","processRules","input","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","replace","m","_i","selector","content","suffix","contentPrefix","startsWith","blocks","substring","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","push","join","convertColonRule","cssText","regExp","partReplacer","parts","p","trim","_polyfillHost","colonHostPartReplacer","host","colonHostContextPartReplacer","indexOf","selectorNeedsScoping","scopeSelector","makeScopeMatcher","test","applyStrictSelectorScope","hostSelector","res","className","_","_scopeSelectorPart","scopedP","lastIndex","replaceBy_1","before","colon","after","applySimpleSelectorScope","t","matches","match","safeContent","placeholders","index","keep","replaceBy","pseudo","exp","safeSelector","scopedSelector","startIndex","sep","shouldScope","exec","separator","part_1","slice","scopeSelectors","scopeSelectorText","slotSelector","commentOriginalSelector","map","shallowPart","scopeCssText","scopeId","hostScopeId","slotScopeId","slotted","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","trimRight","updatedSelector","convertColonSlotted","convertColonHostContext","convertColonHost","reduce","result","pattern","convertShadowDOMSelectors","slottedSelectors","scopeCss","commentsWithHash","stripComments","orgSelectors","processCommentedSelector_1","placeholder","comment","scoped","forEach","_a","classof","$String","String","module","exports","argument","TypeError","uncurryThis","requireObjectCoercible","toString","whitespaces","whitespace","ltrim","rtrim","createMethod","TYPE","$this","string","start","end","$trimEnd","forcedStringTrimMethod","this","PROPER_FUNCTION_NAME","PROPER","fails","METHOD_NAME"],"mappings":"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","file":"20-c73ee3886b28a789117b.js","sourcesContent":["// TODO: Remove this line from `core-js@4`\nrequire('../modules/es.string.trim-right');\nvar $ = require('../internals/export');\nvar trimEnd = require('../internals/string-trim-end');\n\n// `String.prototype.trimEnd` method\n// https://tc39.es/ecma262/#sec-string.prototype.trimend\n// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe\n$({ target: 'String', proto: true, name: 'trimEnd', forced: ''.trimEnd !== trimEnd }, {\n  trimEnd: trimEnd\n});\n","import \"core-js/modules/es.string.trim-end.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\n/*\n Stencil Client Platform v1.17.3 | MIT Licensed | https://stenciljs.com\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function safeSelector(selector) {\n  var placeholders = [];\n  var index = 0;\n  var content;\n  // Replaces attribute selectors with placeholders.\n  // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n  selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n    var replaceBy = \"__ph-\" + index + \"__\";\n    placeholders.push(keep);\n    index++;\n    return replaceBy;\n  });\n  // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n  // WS and \"+\" would otherwise be interpreted as selector separators.\n  content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n    var replaceBy = \"__ph-\" + index + \"__\";\n    placeholders.push(exp);\n    index++;\n    return pseudo + replaceBy;\n  });\n  var ss = {\n    content: content,\n    placeholders: placeholders\n  };\n  return ss;\n};\nvar restoreSafeSelector = function restoreSafeSelector(placeholders, content) {\n  return content.replace(/__ph-(\\d+)__/g, function (_, index) {\n    return placeholders[+index];\n  });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = '([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function stripComments(input) {\n  return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function extractCommentsWithHash(input) {\n  return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function processRules(input, ruleCallback) {\n  var inputWithEscapedBlocks = escapeBlocks(input);\n  var nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n    var m = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n    var selector = m[2];\n    var content = '';\n    var suffix = m[4];\n    var contentPrefix = '';\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n    var cssRule = {\n      selector: selector,\n      content: content\n    };\n    var rule = ruleCallback(cssRule);\n    return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n  });\n};\nvar escapeBlocks = function escapeBlocks(input) {\n  var inputParts = input.split(_curlyRe);\n  var resultParts = [];\n  var escapedBlocks = [];\n  var bracketCount = 0;\n  var currentBlockParts = [];\n  for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    var part = inputParts[partIndex];\n    if (part === CLOSE_CURLY) {\n      bracketCount--;\n    }\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n      resultParts.push(part);\n    }\n    if (part === OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n  var strEscapedBlocks = {\n    escapedString: resultParts.join(''),\n    blocks: escapedBlocks\n  };\n  return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function insertPolyfillHostInCssText(selector) {\n  selector = selector.replace(_colonHostContextRe, _polyfillHostContext).replace(_colonHostRe, _polyfillHost).replace(_colonSlottedRe, _polyfillSlotted);\n  return selector;\n};\nvar convertColonRule = function convertColonRule(cssText, regExp, partReplacer) {\n  // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n  return cssText.replace(regExp, function () {\n    var m = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n    if (m[2]) {\n      var parts = m[2].split(',');\n      var r = [];\n      for (var i = 0; i < parts.length; i++) {\n        var p = parts[i].trim();\n        if (!p) break;\n        r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n      }\n      return r.join(',');\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n};\nvar colonHostPartReplacer = function colonHostPartReplacer(host, part, suffix) {\n  return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function convertColonHost(cssText) {\n  return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function colonHostContextPartReplacer(host, part, suffix) {\n  if (part.indexOf(_polyfillHost) > -1) {\n    return colonHostPartReplacer(host, part, suffix);\n  } else {\n    return host + part + suffix + ', ' + part + ' ' + host + suffix;\n  }\n};\nvar convertColonSlotted = function convertColonSlotted(cssText, slotScopeId) {\n  var slotClass = '.' + slotScopeId + ' > ';\n  var selectors = [];\n  cssText = cssText.replace(_cssColonSlottedRe, function () {\n    var m = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n    if (m[2]) {\n      var compound = m[2].trim();\n      var suffix = m[3];\n      var slottedSelector = slotClass + compound + suffix;\n      var prefixSelector = '';\n      for (var i = m[4] - 1; i >= 0; i--) {\n        var char = m[5][i];\n        if (char === '}' || char === ',') {\n          break;\n        }\n        prefixSelector = char + prefixSelector;\n      }\n      var orgSelector = prefixSelector + slottedSelector;\n      var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n      if (orgSelector.trim() !== addedSelector.trim()) {\n        var updatedSelector = addedSelector + \", \" + orgSelector;\n        selectors.push({\n          orgSelector: orgSelector,\n          updatedSelector: updatedSelector\n        });\n      }\n      return slottedSelector;\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n  return {\n    selectors: selectors,\n    cssText: cssText\n  };\n};\nvar convertColonHostContext = function convertColonHostContext(cssText) {\n  return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function convertShadowDOMSelectors(cssText) {\n  return _shadowDOMSelectorsRe.reduce(function (result, pattern) {\n    return result.replace(pattern, ' ');\n  }, cssText);\n};\nvar makeScopeMatcher = function makeScopeMatcher(scopeSelector) {\n  var lre = /\\[/g;\n  var rre = /\\]/g;\n  scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n  return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function selectorNeedsScoping(selector, scopeSelector) {\n  var re = makeScopeMatcher(scopeSelector);\n  return !re.test(selector);\n};\nvar applySimpleSelectorScope = function applySimpleSelectorScope(selector, scopeSelector, hostSelector) {\n  // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n  _polyfillHostRe.lastIndex = 0;\n  if (_polyfillHostRe.test(selector)) {\n    var replaceBy_1 = \".\" + hostSelector;\n    return selector.replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n      return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n        return before + replaceBy_1 + colon + after;\n      });\n    }).replace(_polyfillHostRe, replaceBy_1 + ' ');\n  }\n  return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function applyStrictSelectorScope(selector, scopeSelector, hostSelector) {\n  var isRe = /\\[is=([^\\]]*)\\]/g;\n  scopeSelector = scopeSelector.replace(isRe, function (_) {\n    var parts = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      parts[_i - 1] = arguments[_i];\n    }\n    return parts[0];\n  });\n  var className = '.' + scopeSelector;\n  var _scopeSelectorPart = function _scopeSelectorPart(p) {\n    var scopedP = p.trim();\n    if (!scopedP) {\n      return '';\n    }\n    if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n      scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n    } else {\n      // remove :host since it should be unnecessary\n      var t = p.replace(_polyfillHostRe, '');\n      if (t.length > 0) {\n        var matches = t.match(/([^:]*)(:*)(.*)/);\n        if (matches) {\n          scopedP = matches[1] + className + matches[2] + matches[3];\n        }\n      }\n    }\n    return scopedP;\n  };\n  var safeContent = safeSelector(selector);\n  selector = safeContent.content;\n  var scopedSelector = '';\n  var startIndex = 0;\n  var res;\n  var sep = /( |>|\\+|~(?!=))\\s*/g;\n  // If a selector appears before :host it should not be shimmed as it\n  // matches on ancestor elements and not on elements in the host's shadow\n  // `:host-context(div)` is transformed to\n  // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n  // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n  // Historically `component-tag:host` was matching the component so we also want to preserve\n  // this behavior to avoid breaking legacy apps (it should not match).\n  // The behavior should be:\n  // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n  // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n  //   `:host-context(tag)`)\n  var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n  // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n  var shouldScope = !hasHost;\n  while ((res = sep.exec(selector)) !== null) {\n    var separator = res[1];\n    var part_1 = selector.slice(startIndex, res.index).trim();\n    shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n    var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n    scopedSelector += scopedPart + \" \" + separator + \" \";\n    startIndex = sep.lastIndex;\n  }\n  var part = selector.substring(startIndex);\n  shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n  scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n  // replace the placeholders with their original values\n  return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function scopeSelector(selector, scopeSelectorText, hostSelector, slotSelector) {\n  return selector.split(',').map(function (shallowPart) {\n    if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n      return shallowPart.trim();\n    }\n    if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n      return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n    } else {\n      return shallowPart.trim();\n    }\n  }).join(', ');\n};\nvar scopeSelectors = function scopeSelectors(cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n  return processRules(cssText, function (rule) {\n    var selector = rule.selector;\n    var content = rule.content;\n    if (rule.selector[0] !== '@') {\n      selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n    } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n      content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n    }\n    var cssRule = {\n      selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n      content: content\n    };\n    return cssRule;\n  });\n};\nvar scopeCssText = function scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n  cssText = insertPolyfillHostInCssText(cssText);\n  cssText = convertColonHost(cssText);\n  cssText = convertColonHostContext(cssText);\n  var slotted = convertColonSlotted(cssText, slotScopeId);\n  cssText = slotted.cssText;\n  cssText = convertShadowDOMSelectors(cssText);\n  if (scopeId) {\n    cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n  }\n  cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n  cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n  return {\n    cssText: cssText.trim(),\n    slottedSelectors: slotted.selectors\n  };\n};\nvar scopeCss = function scopeCss(cssText, scopeId, commentOriginalSelector) {\n  var hostScopeId = scopeId + '-h';\n  var slotScopeId = scopeId + '-s';\n  var commentsWithHash = extractCommentsWithHash(cssText);\n  cssText = stripComments(cssText);\n  var orgSelectors = [];\n  if (commentOriginalSelector) {\n    var processCommentedSelector_1 = function processCommentedSelector_1(rule) {\n      var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n      var comment = \"/*!@\" + rule.selector + \"*/\";\n      orgSelectors.push({\n        placeholder: placeholder,\n        comment: comment\n      });\n      rule.selector = placeholder + rule.selector;\n      return rule;\n    };\n    cssText = processRules(cssText, function (rule) {\n      if (rule.selector[0] !== '@') {\n        return processCommentedSelector_1(rule);\n      } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        rule.content = processRules(rule.content, processCommentedSelector_1);\n        return rule;\n      }\n      return rule;\n    });\n  }\n  var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n  cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n  if (commentOriginalSelector) {\n    orgSelectors.forEach(function (_a) {\n      var placeholder = _a.placeholder,\n        comment = _a.comment;\n      cssText = cssText.replace(placeholder, comment);\n    });\n  }\n  scoped.slottedSelectors.forEach(function (slottedSelector) {\n    cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n  });\n  return cssText;\n};\nexport { scopeCss };","var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","'use strict';\nvar $trimEnd = require('../internals/string-trim').end;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.{ trimEnd, trimRight }` method\n// https://tc39.es/ecma262/#sec-string.prototype.trimend\n// https://tc39.es/ecma262/#String.prototype.trimright\nmodule.exports = forcedStringTrimMethod('trimEnd') ? function trimEnd() {\n  return $trimEnd(this);\n// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe\n} : ''.trimEnd;\n","var PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]()\n      || non[METHOD_NAME]() !== non\n      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);\n  });\n};\n","var $ = require('../internals/export');\nvar trimEnd = require('../internals/string-trim-end');\n\n// `String.prototype.trimRight` method\n// https://tc39.es/ecma262/#sec-string.prototype.trimend\n// eslint-disable-next-line es/no-string-prototype-trimleft-trimright -- safe\n$({ target: 'String', proto: true, name: 'trimEnd', forced: ''.trimRight !== trimEnd }, {\n  trimRight: trimEnd\n});\n"],"sourceRoot":""}