{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2020-01-10-algorithm-20/","result":{"data":{"markdownRemark":{"html":"<h4>문제설명</h4>\n<p>두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.</p>\n<br>\n<h4>제한사항</h4>\n<ul>\n<li>두 수는 1이상 1000000이하의 자연수입니다.</li>\n</ul>\n<br>\n<h4>입출력 예</h4>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>m</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>3</td>\n<td>12</td>\n<td>[3, 12]</td>\n</tr>\n<tr>\n<td>2</td>\n<td>5</td>\n<td>[1, 10]</td>\n</tr>\n</tbody>\n</table>\n<br>\n<h4><strong>풀이</strong></h4>\n<deckgo-highlight-code language=\"javascript\"  terminal=\"carbon\" theme=\"one-dark\" >\n          <code slot=\"code\">function solution(n, m) {\n    var answer = []\n    let max = []\n    let min = 0\n    for (let i = 1; i &lt;= m; i++) {\n        if (n % i == 0 &amp;&amp; m % i == 0) {\n            max.push(i)\n        }\n    }\n    max = max[max.length - 1]\n    min = (n * m) / max\n    answer.push(max, min)\n    return answer\n}</code>\n        </deckgo-highlight-code>\n<ol>\n<li><code>for</code>문으로 매개변수 <code>m</code>의 개수 만큼 반복문을 돌린다.</li>\n<li>만약 <code>n</code>과 <code>m</code>을 <code>i</code>로 나눴을 때 공통으로 0이면 <code>max</code> 배열변수에 <code>push</code> 메소드를 사용해 넣는다.</li>\n<li><code>max</code> 배열 중 마지막 인수는 최대공약수가 된다..</li>\n<li><code>n</code>과 <code>m</code>의 곱한 값과 최대공약수와 최소공배수 곱한 값은 같으므로 <code>n</code>과 <code>m</code>을 곱한 뒤 <code>max</code>로 나눠준다.</li>\n<li><code>max</code>와 <code>min</code>을 <code>answer</code> 배열에 넣어준다.</li>\n</ol>\n<br>\n<h4><strong>다른 사람 풀이</strong></h4>\n<deckgo-highlight-code language=\"javascript\"  terminal=\"carbon\" theme=\"one-dark\" >\n          <code slot=\"code\">function greatestCommonDivisor(a, b) {\n    return b ? greatestCommonDivisor(b, a % b) : Math.abs(a)\n}\nfunction leastCommonMultipleOfTwo(a, b) {\n    return (a * b) / greatestCommonDivisor(a, b)\n}\nfunction gcdlcm(a, b) {\n    return [greatestCommonDivisor(a, b), leastCommonMultipleOfTwo(a, b)]\n}</code>\n        </deckgo-highlight-code>\n<br>\n<h4><strong>배운점</strong></h4>\n<p>다른 사람 풀이는 재귀함수를 사용하여 풀었는데.. 아무리 봐도 이해가 안된다..<br>\n함수명이 길어서 그런가..?<br>\n처음에 최대공약수, 최소공배수 구하는 법을 까먹어서..인터넷에 쳐봤었다..ㅎ<br>\n그래도 이제 확실히 기억할 수 있다!\n<br><br><br><br><br></p>\n<blockquote>\n<p><subtitle>reference</subtitle></p>\n</blockquote>\n<ul>\n<li><a href=\"https://tutorial.djangogirls.org/ko\">https://tutorial.djangogirls.org/ko</a></li>\n<li><a href=\"http://blog.daum.net/_blog/BlogTypeView.do?blogid=0QtKg&#x26;articleno=28&#x26;categoryId=0&#x26;totalcnt=30\">http://blog.daum.net/_blog/BlogTypeView.do?blogid=0QtKg&#x26;articleno=28&#x26;categoryId=0&#x26;totalcnt=30</a></li>\n</ul>\n<p><br><br><br><br><br></p>","frontmatter":{"title":"알고리즘 - 최대공약수와 최소공배수","date":"2020-01-10","image":"algorithm"},"id":"aaba82e3-5eb9-5ee2-baeb-18e450c41aab"}},"pageContext":{"slug":"/posts/2020-01-10-algorithm-20/"}},"staticQueryHashes":["1707471100","3159585216","35752167"]}