{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2019-12-30-function-2/","result":{"data":{"markdownRemark":{"html":"<h1>1. 고차 함수(Higher-order Funtion)</h1>\n<p>함수를 인수로 받는 함수 또는 함수를 반환하는 함수로<br>\n함수를 인수로 받는 <code class=\"language-text\">Array</code>의 메소드들 (<code class=\"language-text\">forEach</code>, <code class=\"language-text\">map</code>, <code class=\"language-text\">reduce</code>, <code class=\"language-text\">filter</code> ···)이 고차 함수에 속한다.<br>\n다른 함수의 인수로 넘겨지는 함수를 <strong>콜백(callback)</strong>이라고 부르기도 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 함수를 인수로 받는 함수</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">func2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> b\n<span class=\"token function\">func2</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//6</span>\n\n<span class=\"token comment\">// 함수를 반환하는 함수</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">func2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> func3 <span class=\"token operator\">=</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">func3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// == func2(2,4)()라는 뜻이다.</span>\n<span class=\"token comment\">//괄호를 한번 더 쓰는 이유는 (2, 4)는 함수까지만 리턴하므로 익명함수를 한 번 더 호출해준다.</span></code></pre></div>\n<p><br><br><br></p>\n<h1>2. 클로저(Closure)</h1>\n<p>외부 함수 밖에서 내부함수가 호출되더라도 외부함수의 지역 변수에 접근할 수 있는데 이러한 함수로 내부함수가 자신이 선언되었을 때 환경(스코프)을 기억하고 있었다가 접근하는 방식이다.<br>\n즉, 바깥 스코프에 있는 변수를 가져다 사용하는 함수와 변수가 저장되는 저장소를 클로저라 부른다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 기존</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">func1</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> x\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">func1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 더이상 변수 x에 접근하지 못함</span>\n\n<span class=\"token comment\">// 클로저</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">func1</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> x\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> func2 <span class=\"token operator\">=</span> <span class=\"token function\">func1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">func2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span></code></pre></div>\n<p><br><br><br></p>\n<h1>3. 재귀 함수 (Recursive Function)</h1>\n<p>함수 안에서 자기 자신을 호출하는 함수</p>\n<p><br><br><br><br><br></p>\n<blockquote>\n<p><subtitle> refernece</p>\n</blockquote>\n<ul>\n<li><a href=\"https://helloworldjavascript.net/pages/255-fp.html\">https://helloworldjavascript.net/pages/255-fp.html</a></li>\n<li><a href=\"https://jeong-pro.tistory.com/23\">https://jeong-pro.tistory.com/23</a></li>\n</ul>","frontmatter":{"title":"자바스크립트 - 함수형 프로그래밍 기법","date":"2019-12-30","image":null},"id":"78ee4d15-deca-58fa-866d-86bcfc2d9282"}},"pageContext":{"slug":"/posts/2019-12-30-function-2/"}}}