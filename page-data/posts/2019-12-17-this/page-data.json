{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2019-12-17-this/","result":{"data":{"markdownRemark":{"html":"<h1>1. this는?</h1>\n<p>함수를 호출 할때, 함수가 어떻게 호출되었는지에 따라 값이 바뀐다.</p>\n<p>함수를 호출하는 방식에는 아래 예시가 있다.</p>\n<ol>\n<li>전역 호출</li>\n<li>함수 호출</li>\n<li>메소드 호출</li>\n<li>생성자 함수 호출</li>\n<li>apply/call/bind 호출</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fruit</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 1. 전역 호출 &amp; 함수 호출</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n<span class=\"token function\">fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// window</span>\n\n<span class=\"token comment\">// 3. 메소드 호출</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> fruit<span class=\"token operator\">:</span> apple <span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// apple</span>\n\n<span class=\"token comment\">// 4. 생성자 함수 호출</span>\n<span class=\"token keyword\">var</span> apple <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">fruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// fruit</span>\n\n<span class=\"token comment\">// 5. apply/call/bind 호출</span>\n<span class=\"token keyword\">var</span> apple <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"apple\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token function\">fruit</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">)</span> <span class=\"token comment\">// apple</span>\n<span class=\"token function\">fruit</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">)</span> <span class=\"token comment\">// apple</span>\n<span class=\"token function\">fruit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// apple</span></code></pre></div>\n<br>\n<h2>1. 전역 호출 &#x26; 함수 호출</h2>\n<p>전역객체는 모든 객체의 유일한 최상위 객체를 의미하며 일반적으로 Browser에서 <strong>window</strong>, Node.js에서 <strong>global</strong> 을 의미한다.</p>\n<p>기본적으로 <code class=\"language-text\">this</code>는 전역객체에 바인딩된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> fruit <span class=\"token operator\">=</span> <span class=\"token string\">\"apple\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span> <span class=\"token comment\">// apple</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>fruit<span class=\"token punctuation\">)</span> <span class=\"token comment\">// apple</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fruitName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fruit<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">fruitName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// apple</span></code></pre></div>\n<br>\n<h2>2. 메소드 호출</h2>\n<p>객체의 프로퍼티가 함수일 경우를 메소드라고 부르는데<br>\n이러한 메소드를 호출할 때 내부 <code class=\"language-text\">this</code>는 해당 메소드를 호출한 객체에 바인딩된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> fruit1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">fruitName</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> fruit2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nfruit2<span class=\"token punctuation\">.</span>fruitName <span class=\"token operator\">=</span> fruit1<span class=\"token punctuation\">.</span>fruitName\nfruit1<span class=\"token punctuation\">.</span><span class=\"token function\">fruitName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// apple</span>\nfruit2<span class=\"token punctuation\">.</span><span class=\"token function\">fruitName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// banana</span></code></pre></div>\n<br>\n<h2>3. 생성자 함수 호츌</h2>\n<p>기존 함수에 new 연산자를 붙여서 호출하는 함수로,\nnew 연산자로 호출한 객체에 바인딩된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">fruitName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> fruit1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">fruitName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruit1<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// apple</span>\n\n<span class=\"token keyword\">var</span> fruit2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">fruitName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruit2<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// banana</span></code></pre></div>\n<br>\n<h2>3. apply/call/bind 호출</h2>\n<p><code class=\"language-text\">apply</code>, <code class=\"language-text\">call</code>는 자바스크립트 엔진의 암묵적인 this 바인딩이 아닌 임의로 바인딩하는 Function.prototype 객체의 메소드이다.</p>\n<h2><code class=\"language-text\">apply</code></h2>\n<h4>문법</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">,</span> argArray<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>thisArg : this에 바인딩할 객체</li>\n<li>argArray : 함수를 호출할 때 넘길 인자들의 배열</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fruit</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> apple <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fruit</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { name: 'apple' }</span></code></pre></div>\n<br>\n<h2><code class=\"language-text\">call</code></h2>\n<h4>문법</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> arg1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>thisArg : this에 바인딩할 객체</li>\n<li>arg : 객체를 위한 인수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fruit</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> apple <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">fruit</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { name: 'apple' }</span></code></pre></div>\n<br>\n<h2><code class=\"language-text\">bind</code></h2>\n<p><code class=\"language-text\">bind</code>는 <code class=\"language-text\">apply</code>, <code class=\"language-text\">call</code> 메소드와는 다르게 함수를 실행시키지 않기때문에 명시적으로 함수를 호출할 필요가 있다.</p>\n<h4>문법</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> arg1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>thisArg : this에 바인딩할 객체</li>\n<li>arg : 객체를 위한 인수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fruit</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> apple <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">fruit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { name: 'apple' }</span></code></pre></div>\n<blockquote>\n<p><subtitle> refernece</p>\n</blockquote>\n<ul>\n<li><a href=\"https://poiemaweb.com/\">https://poiemaweb.com/</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/this\">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/this</a></li>\n</ul>","frontmatter":{"title":"자바스크립트 - this 이해하기","date":"2019-12-17","image":null},"id":"7f2b3c31-9fb5-58ec-ad39-2e3b0c257f73"}},"pageContext":{"slug":"/posts/2019-12-17-this/"}}}