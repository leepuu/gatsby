{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2019-12-30-algorithm-4/","result":{"data":{"markdownRemark":{"html":"<h4>문제설명</h4>\n<p>String형 배열 seoul의 element중 Kim의 위치 x를 찾아, 김서방은 x에 있다는 String을 반환하는 함수, solution을 완성하세요. seoul에 Kim은 오직 한 번만 나타나며 잘못된 값이 입력되는 경우는 없습니다.</p>\n<br>\n<h4>제한사항</h4>\n<ul>\n<li>seoul은 길이 1 이상, 1000 이하인 배열입니다.</li>\n<li>seoul의 원소는 길이 1 이상, 20 이하인 문자열입니다.</li>\n<li>\"Kim\"은 반드시 seoul 안에 포함되어 있습니다.</li>\n</ul>\n<br>\n<h4>입출력 예</h4>\n<table>\n<thead>\n<tr>\n<th>seoul</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[\"Jane\", \"Kim\"]</td>\n<td>\"김서방은 1에 있다\"</td>\n</tr>\n</tbody>\n</table>\n<br>\n<h4><strong>풀이</strong></h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">seoul</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> answer <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token keyword\">let</span> idx <span class=\"token operator\">=</span> seoul<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kim\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>answer <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">김서방은 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>idx<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">에 있다</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">indexOf</code> 메소드를 사용하여 \"Kim\"의 index값을 알아내 변수 <code class=\"language-text\">idx</code> 값에 넣어준다.</li>\n<li>문자열에 변수 <code class=\"language-text\">idx</code>를 넣어주어 출력한다.</li>\n</ol>\n<br>\n<h4><strong>다른 사람 풀이</strong></h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">findKim</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">seoul</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> idx <span class=\"token operator\">=</span> seoul<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kim\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"김서방은 \"</span> <span class=\"token operator\">+</span> idx <span class=\"token operator\">+</span> <span class=\"token string\">\"에 있다\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">indexOf</code> 메소드를 사용하여 \"Kim\"의 index값을 알아내 변수 <code class=\"language-text\">idx</code> 값에 넣어준다.</li>\n<li>문자열에 변수 <code class=\"language-text\">idx</code>를 넣어주어 출력한다.</li>\n</ol>\n<br>\n<h4><strong>배운점</strong></h4>\n<p>내 코드와 다른 사람 풀이의 차이는 ES6의 차이라고 생각된다.<br>\n문자열에서 나는 <strong><code class=\"language-text\"></code></strong>와 <strong>${}</strong>를 사용하여 연산자를 사용하지 않았고<br>\n다른사람은 연산자를 사용하여 연결해주었다.</p>\n<p><br><br><br><br><br></p>\n<blockquote>\n<p><subtitle>reference</subtitle></p>\n</blockquote>\n<ul>\n<li><a href=\"https://tutorial.djangogirls.org/ko\">https://tutorial.djangogirls.org/ko</a></li>\n<li><a href=\"http://blog.daum.net/_blog/BlogTypeView.do?blogid=0QtKg&#x26;articleno=28&#x26;categoryId=0&#x26;totalcnt=30\">http://blog.daum.net/_blog/BlogTypeView.do?blogid=0QtKg&#x26;articleno=28&#x26;categoryId=0&#x26;totalcnt=30</a></li>\n</ul>\n<p><br><br><br><br><br></p>","frontmatter":{"title":"알고리즘 - 서울에서 김서방 찾기","date":"2019-12-30","image":"algorithm"},"id":"5d8b2aea-e340-554b-acdd-6f2e806614fd"}},"pageContext":{"slug":"/posts/2019-12-30-algorithm-4/"}},"staticQueryHashes":["1707471100","3159585216","35752167"]}