{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2020-03-12-react-4/","result":{"data":{"markdownRemark":{"html":"<h1>1. 컴포넌트(Component) 란?</h1>\n<p>컴포넌트는 HTML을 반환하는 함수로, <strong>재사용</strong>이 가능하며 <strong>독립적</strong>이다.\n이러한 컴포넌트는 꼭 <strong>대문자</strong>로 네이밍 해주어야한다.</p>\n<p>컴포넌트는 총 두 종류로 나뉘는데 클래스형 컴포넌트와 함수형 컴포넌트로 나뉜다.<br>\n아래에서 한 번 다뤄보겠드아....</p>\n<p>s</p>\n<p><br><br><br></p>\n<h1>2. 함수형 컴포넌트 (Function Component)</h1>\n<p>function을 사용하여 return하며 screen에 출력하는 방식으로,<br>\n클래스형 컴포넌트보다 선언하기 편하며 메모리자원도 적다.</p>\n<p>원래는 클래스형 컴포넌트에서 쓰인 state기능과 라이프스타일 기능을 사용하지 못하였는데,<br>\n리액트 16부터는 Hooks라는 기능이 도입되면서 사용할 수 있게 되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>리액트 조아<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p><br><br><br></p>\n<h1>3. 클래스형 컴포넌트 (Class Component)</h1>\n<p>class를 사용하여 React Component로 부터 확장되고 screen에 출력하는 방식으로,<br>\nstate기능 및 라이프사이클 기능을 사용할 수 있으며, 임의 메서드도 정의 가능하다.<br>\n클래스형 컴포넌트에서는 <strong><code class=\"language-text\">render</code></strong> 메서드가 꼭 필요하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>리액트 시러<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p><br><br><br></p>\n<p>이렇게 컴포넌트에 대해 다뤄 봤는데, 되도록이면 함수형 컴포넌트를 사용하는걸 권장하고있다.<br>\n그렇다고 아예 클래스 컴포넌트가 사라지는건 아니기 때문에 알아두기는 해야겠지만,<br>\n웬만해선 함수형을 사용하자</p>\n<p><br><br><br></p>\n<blockquote>\n<p><subtitle>reference</subtitle></p>\n</blockquote>\n<ul>\n<li><a href=\"https://2019.stateofjs.com/front-end-frameworks/\">https://2019.stateofjs.com/front-end-frameworks/</a></li>\n<li>&#x3C;리액트를 다루는 기술 - 길벗></li>\n</ul>","frontmatter":{"title":"React.js - Component 이해하기","date":"2020-03-12","image":null},"id":"338b8e7d-454d-51ef-b234-5caaee127930"}},"pageContext":{"slug":"/posts/2020-03-12-react-4/"}}}