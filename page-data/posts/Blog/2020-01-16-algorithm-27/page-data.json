{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/Blog/2020-01-16-algorithm-27/","result":{"data":{"markdownRemark":{"html":"<h4>문제설명</h4>\n<p>행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다. 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요.\n<br></p>\n<h4>제한사항</h4>\n<ul>\n<li>행렬 arr1, arr2의 행과 열의 길이는 500을 넘지 않습니다.\n<br></li>\n</ul>\n<h4>입출력 예</h4>\n<table>\n<thead>\n<tr>\n<th>arr1</th>\n<th>arr2</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[[1,2],[2,3]]</td>\n<td>[[3,4],[5,6]]</td>\n<td>[[4,6],[7,9]]</td>\n</tr>\n<tr>\n<td>[[1],[2]]</td>\n<td>[[3],[4]]</td>\n<td>[[4],[6]]</td>\n</tr>\n</tbody>\n</table>\n<br>\n<h4><strong>풀이</strong></h4>\n<pre><code class=\"language-javascript\">function solution(arr1, arr2) {\n    var answer = [[]]\n    let num = 0\n    let arr3 = []\n\n    answer = arr1.map((item) => {\n        arr3 = []\n        let idx = arr1.indexOf(item)\n        for (let i = 0; i &#x3C; item.length; i++) {\n            num = arr1[idx][i] + arr2[idx][i]\n            arr3.push(num)\n        }\n        return arr3\n    })\n\n    return answer\n}\n</code></pre>\n<ol>\n<li><code>map</code>을 이용해 함수를 적용시키고 새로운 배열을 만든다.</li>\n<li>먼저 매개변수 <code>arr1</code>의 배열 인수들의 위치값을 가져온다.</li>\n<li>배열 인수의 개수로 반복문을 돌라 그 위치값끼리 더 해준뒤 새로운 배열에 담아준다.</li>\n<li>값을 리턴한다.</li>\n</ol>\n<br>\n<h4><strong>다른 사람 풀이 01</strong></h4>\n<pre><code class=\"language-javascript\">function sumMatrix(A, B) {\n    return A.map((a, i) => a.map((b, j) => b + B[i][j]))\n}\n</code></pre>\n<ol>\n<li><code>map</code>을 이용해 이중 반복문을 만들고 새로운 배열을 만든다.</li>\n<li>B의 위치값들을 더해준다.\n<br></li>\n</ol>\n<h4><strong>배운점</strong></h4>\n<p><code>map</code>에서 위치값 가지고 오는 매개변수를 넣을 수 있었는데 몰라서 난 함수에 넣었다..<br>\n만약 매개변수로 넣는다면 불필요한 <code>idx</code> 변수는 필요없다!\n아래 매개변수로 적용한 코드이다. 참고하도록 하자!</p>\n<pre><code class=\"language-javascript\">function solution(arr1, arr2) {\n    var answer = [[]]\n    let num = 0\n    let arr3 = []\n\n    answer = arr1.map((item, index) => {\n        arr3 = []\n        for (let i = 0; i &#x3C; item.length; i++) {\n            num = arr1[index][i] + arr2[index][i]\n            arr3.push(num)\n        }\n        return arr3\n    })\n\n    return answer\n}\n</code></pre>\n<p><br><br><br><br><br></p>\n<blockquote>\n<p><subtitle>reference</subtitle></p>\n</blockquote>\n<ul>\n<li><a href=\"https://tutorial.djangogirls.org/ko\">https://tutorial.djangogirls.org/ko</a></li>\n<li><a href=\"http://blog.daum.net/_blog/BlogTypeView.do?blogid=0QtKg&#x26;articleno=28&#x26;categoryId=0&#x26;totalcnt=30\">http://blog.daum.net/_blog/BlogTypeView.do?blogid=0QtKg&#x26;articleno=28&#x26;categoryId=0&#x26;totalcnt=30</a></li>\n</ul>\n<p><br><br><br><br><br></p>","frontmatter":{"title":"알고리즘 - 행렬의 덧셈"},"excerpt":"문제설명 행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다. 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요.\n 제한사항 행렬 arr…"}},"pageContext":{"slug":"/posts/Blog/2020-01-16-algorithm-27/"}}}