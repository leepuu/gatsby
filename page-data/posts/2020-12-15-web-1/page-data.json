{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2020-12-15-web-1/","result":{"data":{"markdownRemark":{"html":"<h1>1. 브라우저란?🤔</h1>\n<p>브라우저는 <strong>서버에 자원을 요청하고 그걸 응답하여 화면에 나타내주는 소프트웨어</strong>로,<br>\n자원은 보통 HTML 문서지만 PDF나 이미지 또는 다른 형태로 알 수 있다.<br>\n인터넷 익스플로러, 크롬, 파이어폭스, 사파리, 오페라 등이 우리가 흔히 알고 있는 브라우저이다.</p>\n<p><img src=\"/posts/web/web-1/browser-1.jpg\" alt=\"브라우저\"></p>\n<p class=\"sub_txt\">차례대로 Internet explorer, Safari, FireFox, Opera, Chrome</p>\n<p><br><br><br></p>\n<h1>2. 기본 구조</h1>\n<p><img src=\"/posts/web/web-1/browser-2.jpg\" alt=\"브라우저\"></p>\n<br>\n<ol>\n<li><em>사용자 인터페이스 (UI - User Interface)</em> :<br>\n요청한 페이지를 보여주는 창을 제외한 나머지 모두를 뜻하는 것으로 사용자가 <strong>기능을 쉽게 이용</strong>할 수 있도록 만든 요소들이다. 예를 들어 주소창, 이전/다음 버튼, 북마크 등이 있다.\n<br><br></li>\n<li><em>브라우저 엔진 (Brower Engine)</em> :<br>\n사용자 인터페이스와 렌더링 엔진 사이의 동작을 제어하는 곳이다.\n<br><br></li>\n<li><em>렌더링 엔진 (Rendering Engine)</em> :<br>\n사용자가 <strong>요청한 콘텐츠를 표시</strong>하는 역할로 HTML 파일을 요청하면 HTML과 CSS을 파싱하여 보여준다. 렌더링 엔진의 종류는 WebKit, Trident, Gecko 등등이 있다.\n<br><br></li>\n<li><em>통신 (Networking)</em> :<br>\n<strong>네트워크 호출에 사용</strong>되는 요소로, 플랫폼 독립적인 인터페이스이고 각 플랫폼 하부에서 실행된다.\n<br><br></li>\n<li><em>UI백엔드 (UI Backend)</em> :<br>\n콤보박스(드롭다운) 와 창 같은 <strong>기본 장치를 그릴 때 사용</strong>하는 요소로, OS마다 UI가 다르다.\n<br><br></li>\n<li><em>자바스크립트 해석기 (JavaScript Interpreter)</em> :<br>\n말 그대로 자바스크립트 코드를 해석하여 실행한다.\n<br><br></li>\n<li><em>자료저장소 (Data Persistence)</em> :<br>\n쿠키와 같은 데이터를 저장하는 계층이다.</li>\n</ol>\n<p><br><br><br></p>\n<h1>3. 렌더링 엔진</h1>\n<p>렌더링 엔진은 위에서 설명했듯이 사용자가 요청한 내용을 브라우저 화면에 표시하는 역할로<br>\nHTML, XML, 이미지를 표시할 수 있다. 또한 플러그인이나 브라우저마다 확장기능을 사용해 PDF 같은 유형도 표시할 수 있다.\n<br><br></p>\n<table>\n<thead>\n<tr>\n<th>엔진</th>\n<th>브라우저</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>WebKit(웹키트)</td>\n<td>Safari, Chrome(28 버전 이전)</td>\n</tr>\n<tr>\n<td>Trident(트라이던트)</td>\n<td>인터넷 익스플로러(IE)</td>\n</tr>\n<tr>\n<td>Gecko(게코)</td>\n<td>FireFox</td>\n</tr>\n<tr>\n<td>Blink(블링크)</td>\n<td>Chrome(28 버전 이후)</td>\n</tr>\n</tbody>\n</table>\n<p class=\"sub_txt\">Blink는 Webkit을 기반으로 제작된 새로운 엔진</p>\n<br><br>\n<h3>3-1. 동작 과정</h3>\n<br>\n<p><img src=\"/posts/web/web-1/browser-3.jpg\" alt=\"브라우저\"></p>\n<p class=\"sub_txt\">렌더링 엔진의 기본 동작 과정</p>\n<ol>\n<li>렌더링 엔진은 <strong>HTML 문서를 파싱</strong>하고 \"콘텐츠 트리\" 내부에서 태그를 <strong>DOM노드로 변환</strong> (다루기 쉬운 구조로 바꿈)</li>\n<li>CSS와 함께 포함된 스타일 요소 파싱 ➡ CSSOM로 변환</li>\n<li><strong>렌더트리</strong>(HTML 표시 구축과 스타일 정보의 결합 = DOM + CSSOM) 생성 ➡ 색상, 넓이 등 시각적 속성이 있는 사각형을 포함하는데 정해진 순서대로 화면에 표시</li>\n<li>렌더트리 생성이 끝난 후 <strong>배치</strong> 시작 ➡ 각 노드가 화면의 정확한 위치에 표시됨</li>\n<li>화면에 렌더트리 <strong>그리기</strong></li>\n</ol>\n<p><br><br><br></p>\n<h3>3-2. 파싱과 DOM 트리 구축</h3>\n<h5>1. 파싱 일반</h5>\n<p>문서 파싱이란? 브라우저가 <strong>코드를 이해하고 사용할 수 있는 구조로 변환</strong>하는 것이다.<br>\n파싱 결과는 보통 문서 구조를 나타내는 노드 트리로 파싱 트리(parse tree) 또는 문법 트리(syntax tree)라고 불린다.</p>\n<br>\n<h5>2. HTML 파서</h5>\n<p>HTML 마크업을 파싱 트리로 변환하는 것으로 파</p>\n<p><br><br><br></p>\n<blockquote>\n<p><subtitle>reference</subtitle></p>\n</blockquote>\n<ul>\n<li><a href=\"https://d2.naver.com/helloworld/59361\">https://d2.naver.com/helloworld/59361</a></li>\n<li><a href=\"https://github.com/cliche90/markdown_tutorial\">https://github.com/cliche90/markdown_tutorial</a></li>\n<li><a href=\"https://heropy.blog/2017/09/30/markdown/\">https://heropy.blog/2017/09/30/markdown/</a></li>\n</ul>","frontmatter":{"title":"브라우저 - 브라우저 동작 방식","date":"2020-12-15","image":"browser"},"id":"779b4bc8-49ef-5bb1-b267-7481994df6ed"}},"pageContext":{"slug":"/posts/2020-12-15-web-1/"}}}