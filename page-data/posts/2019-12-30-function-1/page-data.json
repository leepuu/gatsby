{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2019-12-30-function-1/","result":{"data":{"markdownRemark":{"html":"<h1>1. 함수형 프로그래밍(functional programming)이란?</h1>\n<p>함수를 1급 객체와 순수 함수로 프로그래밍 하는것을 뜻한다.</p>\n<p><br><br></p>\n<h2>1급 객체(First-Class Object)</h2>\n<p>1급 시민(First-Class Citizens)의 조건인 아래 사항을 충족하는 객체이다.</p>\n<ol>\n<li>변수에 담을 수 있다.</li>\n<li>인자로 전달할 수 있다.</li>\n<li>반환 값으로 전달할 수 있다.\n<br><br></li>\n</ol>\n<h2>순수 함수(Pure Functions)</h2>\n<p>순수 함수란 동일한 인자를 넣었을 때 항상 동일한 리턴값을 반환하고 외부의 영향을 받지 않는 함수이다.<br>\n리턴값 외에는 외부와 소통하지 않는다.<br>\n순수 함수를 사용하면 오류를 줄이고 안정성을 높인다.</p>\n<deckgo-highlight-code language=\"javascript\"  terminal=\"carbon\" theme=\"one-dark\" >\n          <code slot=\"code\">// 순수 함수\nconst sum = (a, b) =&gt; a + b\nsum(2, 3) //5\n\n// 비순수 함수\nlet c = 5\nconst sum = (a, b) =&gt; a + b + c\nsum(2, 3) //10\n\nc = 6 // 변수 값이 달라지면 결과값도 바뀌기 때문에 순수 함수가 될 수 없다.\nsum(2, 3) //11</code>\n        </deckgo-highlight-code>\n<p><br><br><br></p>\n<h1>2. 함수형 프로그래밍의 특징</h1>\n<ol>\n<li>보다 코드를 간결하게 작성하고 가독성을 높일수 있다.</li>\n<li>동시성 작업이 쉽고 안전하다.</li>\n<li>테스트가 간편하다.</li>\n<li>캐싱 기능을 구현할 수 있다.</li>\n</ol>\n<p><br><br><br><br><br></p>\n<blockquote>\n<p><subtitle> refernece</p>\n</blockquote>\n<ul>\n<li><a href=\"https://memory.today/dev/34\">https://memory.today/dev/34</a></li>\n<li><a href=\"https://jeong-pro.tistory.com/23\">https://jeong-pro.tistory.com/23</a></li>\n</ul>","frontmatter":{"title":"자바스크립트 - 함수형 프로그래밍 이해하기","date":"2019-12-30","image":null},"id":"7e8b4e6a-5844-5f1a-b324-ab9877c8494d"}},"pageContext":{"slug":"/posts/2019-12-30-function-1/"}},"staticQueryHashes":["1707471100","3159585216","35752167"]}