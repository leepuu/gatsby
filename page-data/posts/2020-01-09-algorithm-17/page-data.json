{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2020-01-09-algorithm-17/","result":{"data":{"markdownRemark":{"html":"<h4>문제설명</h4>\n<p>S사에서는 각 부서에 필요한 물품을 지원해 주기 위해 부서별로 물품을 구매하는데 필요한 금액을 조사했습니다. 그러나, 전체 예산이 정해져 있기 때문에 모든 부서의 물품을 구매해 줄 수 는 없습니다. 그래서 최대한 많은 부서의 물품을 구매해 줄 수 있도록 하려고 합니다.</p>\n<p>물품을 구매해 줄 때는 각 부서가 신청한 금액만큼을 모두 지원해 줘야 합니다. 예를 들어 1,000원을 신청한 부서에는 정확히 1,000원을 지원해야 하며, 1,000원보다 적은 금액을 지원해 줄 수 는 없습니다.</p>\n<p>부서별로 신청한 금액이 들어있는 배열 d와 예산 budget이 매개변수로 주어질 때, 최대 몇 개의 부서에 물품을 지원할 수 있는지 return 하도록 solution 함수를 완성해주세요.</p>\n<br>\n<h4>제한사항</h4>\n<ul>\n<li>d는 부서별로 신청한 금액이 들어있는 배열이며, 길이(전체 부서의 개수)는 1 이상 100 이하입니다.</li>\n<li>d의 각 원소는 부서별로 신청한 금액을 나타내며, 부서별 신청 금액은 1 이상 100,000 이하의 자연수입니다.</li>\n<li>budget은 예산을 나타내며, 1 이상 10,000,000 이하의 자연수입니다.</li>\n</ul>\n<br>\n<h4>입출력 예</h4>\n<table>\n<thead>\n<tr>\n<th>d</th>\n<th>budget</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[1,3,2,5,4]</td>\n<td>9</td>\n<td>3</td>\n</tr>\n<tr>\n<td>[2,2,3,3]</td>\n<td>10</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<br>\n<h4><strong>풀이</strong></h4>\n<deckgo-highlight-code language=\"javascript\"  terminal=\"carbon\" theme=\"one-dark\" >\n          <code slot=\"code\">function solution(d, budget) {\n    var answer = 0\n    d = d.sort((a, b) =&gt; a - b)\n    for (let i of d) {\n        if (budget &gt;= i) {\n            budget -= i\n            answer++\n        }\n    }\n    return answer\n}</code>\n        </deckgo-highlight-code>\n<ol>\n<li>매개변수 <code>d</code>를 먼저 오름차순으로 정렬시켜준다.</li>\n<li><code>for</code>문을 돌려 만약 <code>budget</code>변수가 배열 인수보다 크다면 <code>budget</code> 변수에 배열 인수를 빼준다.</li>\n<li><code>answer</code>변수에 1씩 더해준다.</li>\n</ol>\n<br>\n<h4><strong>다른 사람 풀이</strong></h4>\n<deckgo-highlight-code language=\"javascript\"  terminal=\"carbon\" theme=\"one-dark\" >\n          <code slot=\"code\">function solution(d, budget) {\n    d.sort((a, b) =&gt; a - b)\n\n    while (d.reduce((a, b) =&gt; a + b, 0) &gt; budget) d.pop()\n\n    return d.length\n}</code>\n        </deckgo-highlight-code>\n<ol>\n<li>매개변수 <code>d</code>를 먼저 오름차순으로 정렬시켜준다.</li>\n<li>만약 배열 인수를 모두 더한 값이 <code>budget</code>변수 값보다 크다면 <code>pop</code> 메소드를 사용해 뒷 자리부터 제거해준다.</li>\n<li>배열 길이를 반환한다.</li>\n</ol>\n<br>\n<h4><strong>배운점</strong></h4>\n<p>난 카운트를 했는데 다른 사람 풀이 보니 길이를 셌다.<br>\n전혀 생각치 못한 풀이라 당황했다. 그냥 힐끔 보고 비슷하다고 생각했는데.. 우와..</p>\n<p>다시 한번 생각 할 수 있는 풀이였다..\n<br><br><br><br><br></p>\n<blockquote>\n<p><subtitle>reference</subtitle></p>\n</blockquote>\n<ul>\n<li><a href=\"https://tutorial.djangogirls.org/ko\">https://tutorial.djangogirls.org/ko</a></li>\n<li><a href=\"http://blog.daum.net/_blog/BlogTypeView.do?blogid=0QtKg&#x26;articleno=28&#x26;categoryId=0&#x26;totalcnt=30\">http://blog.daum.net/_blog/BlogTypeView.do?blogid=0QtKg&#x26;articleno=28&#x26;categoryId=0&#x26;totalcnt=30</a></li>\n</ul>\n<p><br><br><br><br><br></p>","frontmatter":{"title":"알고리즘 - 예산","date":"2020-01-09","image":"algorithm"},"id":"5fbaad37-aba5-5ddd-95ca-a6517fc3e7cb"}},"pageContext":{"slug":"/posts/2020-01-09-algorithm-17/"}},"staticQueryHashes":["1707471100","3159585216","35752167"]}