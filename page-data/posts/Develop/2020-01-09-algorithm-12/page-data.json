{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Develop/2020-01-09-algorithm-12/","result":{"data":{"markdownRemark":{"html":"<h4>문제설명</h4>\n<p>1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다.</p>\n<p>1-1. 입력된 수가 짝수라면 2로 나눕니다.<br>\n1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.</p>\n<ol start=\"2\">\n<li>결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.</li>\n</ol>\n<p>예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야하는지 반환하는 함수, solution을 완성해 주세요. 단, 작업을 500번을 반복해도 1이 되지 않는다면 –1을 반환해 주세요.</p>\n<br>\n<h4>제한사항</h4>\n<ul>\n<li>입력된 수, num은 1 이상 8000000 미만인 정수입니다.</li>\n</ul>\n<br>\n<h4>입출력 예</h4>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>6</td>\n<td>8</td>\n</tr>\n<tr>\n<td>16</td>\n<td>4</td>\n</tr>\n<tr>\n<td>626331</td>\n<td>-1</td>\n</tr>\n</tbody>\n</table>\n<br>\n<h4><strong>풀이</strong></h4>\n<pre><code class=\"language-javascript\">function solution(num) {\n    var answer = 0\n    while (num > 1) {\n        num = num % 2 == 0 ? num / 2 : num * 3 + 1\n        answer++\n    }\n    return (answer = answer > 500 ? -1 : answer)\n}\n</code></pre>\n<ol>\n<li>매개변수 <code>num</code> 이 1보다 크다면 <code>while</code> 반복문을 돌린다.</li>\n<li>만약 <code>num</code>을 2로 나눈 나머지가 0이라면 2로 나누고 아니라면 3을 곱한뒤 1 을 더한다.</li>\n<li>반복 한번씩 돌 때 마다. <code>answer</code> 에 1을 더해준다.</li>\n<li>만약 <code>answer</code> 이 500이 넘는다면 -1을 반환 아니면 <code>answer</code> 그대로 반환</li>\n</ol>\n<br>\n<h4><strong>다른 사람 풀이</strong></h4>\n<pre><code class=\"language-javascript\">function collatz(num, count = 0) {\n    return num == 1 ? (count >= 500 ? -1 : count) : collatz(num % 2 == 0 ? num / 2 : num * 3 + 1, ++count)\n}\n</code></pre>\n<ol>\n<li>매개변수 <code>num</code>이 1 일 때 <code>count</code>가 500이 넘으면 -1을 아니면 <code>count</code> 값을 반환한다.</li>\n<li>재귀함수를 써서 만약 <code>num</code>을 2로 나눈 나머지가 0이라면 2로 나누고 아니라면 3을 곱한뒤 1 을 더한다.</li>\n<li>count 변수에 계속 더 해준다.</li>\n</ol>\n<br>\n<h4><strong>배운점</strong></h4>\n<p>나는 <code>while</code> 반복문을 써서 계속 나눴지만 간단하게 재귀함수를 쓸 수 있는 문제였다.<br>\n재귀함수의 이해도는 있지만 유용하게 써 본 적이 없어 아쉽지만 이렇게 다른 사람의 풀이를 보며 배워가는 거라고 생각이든다.</p>\n<p><br><br><br><br><br></p>\n<blockquote>\n<p><subtitle>reference</subtitle></p>\n</blockquote>\n<ul>\n<li><a href=\"https://tutorial.djangogirls.org/ko\">https://tutorial.djangogirls.org/ko</a></li>\n<li><a href=\"http://blog.daum.net/_blog/BlogTypeView.do?blogid=0QtKg&#x26;articleno=28&#x26;categoryId=0&#x26;totalcnt=30\">http://blog.daum.net/_blog/BlogTypeView.do?blogid=0QtKg&#x26;articleno=28&#x26;categoryId=0&#x26;totalcnt=30</a></li>\n</ul>\n<p><br><br><br><br><br></p>","frontmatter":{"title":"알고리즘 - 콜라츠 추측"},"excerpt":"문제설명 1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다. 1-1. 입력된 수가 짝수라면 2로 나눕니다. 1-…"}},"pageContext":{"slug":"/posts/Develop/2020-01-09-algorithm-12/"}}}