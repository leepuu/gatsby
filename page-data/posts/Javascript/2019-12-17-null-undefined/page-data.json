{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Javascript/2019-12-17-null-undefined/","result":{"data":{"markdownRemark":{"html":"<p>내가 헷갈리기 때문에 작성하는 null과 undefined의 차이~~<br>\n그냥 보면 둘 다 '없음'을 나타내지만, 용도와 목적이 다른 두 객체를 비교해보려고 한다.</p>\n<p><br><br><br></p>\n<h1>1. null</h1>\n<p>null이라는 <strong>빈 값을 할당한 상태</strong>로 null은 자료형이 객체이다.</p>\n<pre><code class=\"language-javascript\">let num = null\nconsole.log(num) // null\nconsole.log(typeof num) // object\n</code></pre>\n<p><br><br><br></p>\n<h1>2. undefined</h1>\n<p><strong>변수를 선언만</strong> 하고, 아무런 값을 할당하지 않은 상태이다.<br>\n그러므로 자료형이 결정되지 않았다.</p>\n<pre><code class=\"language-javascript\">let num\nconsole.log(num) // undefined\nconsole.log(typeof num) // undefined\n</code></pre>\n<p><br><br><br></p>\n<h1>3. null == undefined</h1>\n<p>하지만 비교연산자 == 는 true가 나온다. 이유는 자동형변환으로 자료형을 강제로 맞춰 비교하기 때문이다.<br>\n따라서 둘의 자료형을 맞추면 '없음'이라는 값이 나타나기 때문에 true라는 결과가 나온다.<br>\n하지만 === 식을 비교한다면 자동형변환이 이루어지지 않아 false 값이 나온다.</p>\n<p><br><br><br><br><br></p>\n<blockquote>\n<p><subtitle> refernece</p>\n</blockquote>\n<ul>\n<li><a href=\"https://helloworldjavascript.net/pages/160-null-undefined.html\">https://helloworldjavascript.net/pages/160-null-undefined.html</a></li>\n</ul>","frontmatter":{"title":"자바스크립트 - null과 undefined 차이"},"excerpt":"내가 헷갈리기 때문에 작성하는 null과 undefined의 차이~~ 그냥 보면 둘 다 '없음'을 나타내지만, 용도와 목적이 다른 두 객체를 비교해보려고 한다.  1. null null이라는 빈 값을 할당한 상태로 null은 자료형이 객체이다.…"}},"pageContext":{"slug":"/posts/Javascript/2019-12-17-null-undefined/"}}}