{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2021-01-14-gulp-1/","result":{"data":{"markdownRemark":{"html":"<h1>🥤 Gulp 시작하기</h1>\n<p>일단 Gulp를 시작하기 앞서 <strong>Node.js</strong>와 <strong>npm</strong>이 필요하다.<br>\nnpm은 node.js가 설치되면 자동으로 같이 딸려오니 따로 설치는 할 필요없다.</p>\n<p>Node.js : <a href=\"https://nodejs.org/ko/\">https://nodejs.org/ko/</a></p>\n<p>아래 명령어는 잘 설치되어 있는지 확인하는 방법이다.<br>\n버전을 보면 됨 ^^*</p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">$ node -v\nv10.16.3\n\n$ npm -v\n6.14.10</code></pre></div>\n<h1>🥤 Gulp 설치하기</h1>\n<h4>1. Gulp 전역 설치</h4>\n<p>아래 명령어는 전역에 설치하는거다.<br>\n전역에 설치하는 이유는 어디서든 바로 Gulp 명령어를 사용할 수 있게 하려는거임! </p>\n<p>버전을 확인해서 잘 설치되었는지 보자</p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">$ npm install --global gulp-cli\n$ gulp -v\nCLI version: 2.3.0\nLocal version: 4.0.2</code></pre></div>\n<p><br><br></p>\n<h4>2. Gulp 로컬에 설치</h4>\n<p>npm init는 node 프로그램을 시작하는 명령어로 package.json을 설치한다.<br>\n명령어는 내가 실행할 디렉토리에서 실행해야됨!! </p>\n<p>그러면 아래 상황들이 나오는데 입맛에 맞게 설정하면 된다.</p>\n<p>나는 일단 설치가 목적이기 때문에 엔터만 누른다. (나중에 수정 가능)</p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">$ npm init\n\npackage name: (test)\nversion: (1.0.0)\ndescription:\nentry point: (index.js)\ntest command:\ngit repository:\nkeywords:\nauthor:\nlicense: (ISC)</code></pre></div>\n<br>\n<p>전역에도 설치했지만 모듈을 설치하기 위해서 같은 디렉토리에<br>\n아래 명령어를 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">$ npm install --save-dev gulp</code></pre></div>\n<p><br><br></p>\n<h4>3-1. gulpfile.js 셋팅하기</h4>\n<p>Gulp를 실행하기 위해선 gulpfile.js를 생성해줘야한다.<br>\n자동으로 생기는게 아니기때문에 직접 새 파일로 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// gulpfile.js</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">defaultTask</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'걸프 시작하기'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nexports<span class=\"token punctuation\">.</span>default <span class=\"token operator\">=</span> defaultTask</code></pre></div>\n<p>이제 터미널에 gulp를 입력해주면 아래 처럼 나온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">$ gulp\n[14:59:59] Using gulpfile D:\\Study\\test2\\gulpfile.js\n[14:59:59] Starting &#39;default&#39;...\n걸프 시작하기\n[14:59:59] Finished &#39;default&#39; after 3.2 ms</code></pre></div>\n<br>\n<p><strong>default</strong>는 gulp를 실행하면 시작하는 동작을 말한다.<br>\n함수 defaultTask를 실행시켰기 때문에 console.log인 \"걸프 시작하기\"가 나온다.</p>\n<p><br><br></p>\n<h4>3-2. Gulp 메서드</h4>\n<p>아주아주 기초적인건 설치가 되었다.<br>\n근데 우리가 gulp를 사용하기 위해선 메서드를 알아둬야된다.<br>\n많은 메서드가 있지만 대표적으로 쓰이는 것만 설명하겠음</p>\n<h2><code class=\"language-text\">src</code> 메서드</h2>\n<p>작업할 대상 되는 <strong>파일을 지정</strong>해주는 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span> <span class=\"token punctuation\">(</span>globs<span class=\"token punctuation\">)</span> </code></pre></div>\n<ul>\n<li>globs : 어떤 파일을 읽을 건지 결정, 파일을 선택하는 방식은 node-glob 문법을 따른다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./src/img/*\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><br><br></p>\n<h2><code class=\"language-text\">pipe</code> 메서드</h2>\n<p>gulp의 스트리밍 기능으로 src로 대상을 정했으면 각 파일을 stream 형태로 읽어 다음 <strong>플러그인으로 연결</strong>해주는 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./src/img/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./dist/img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><br><br></p>\n<h2><code class=\"language-text\">dest</code> 메서드</h2>\n<p>작업이 종료된 파일의 <strong>저장되는 경로</strong>를 지정해주는 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>directory<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>dest : 파일이 기록될 디렉토리</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./src/img/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./dist/img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><br><br></p>\n<h2><code class=\"language-text\">watch</code> 메서드</h2>\n<p>파일의 변경, 업데이트 등을 <strong>감지하여 작업을 수행</strong>하는 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">gulp<span class=\"token punctuation\">.</span><span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>globs <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span> options <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span> task <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>globs : 감시할 파일</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/scss/*.scss'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>outputStyle<span class=\"token operator\">:</span> <span class=\"token string\">'compressed'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> sass<span class=\"token punctuation\">.</span>logError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist/css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./src/scss/**/*\"</span><span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><br><br></p>\n<h2><code class=\"language-text\">task</code> 메서드</h2>\n<p>작업을 선언하는 명령어로 이제 <strong>더 이상 쓰이지 않는다</strong>.</p>\n<p><br><br></p>\n<h2><code class=\"language-text\">series</code> 메서드</h2>\n<p>작업들을 조합하며 실행하는 메서드로 <strong>순차적으로</strong> 실행한다. 직렬구조</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>tasks<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>tasks : 실행할 작업들</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>css<span class=\"token punctuation\">,</span> js<span class=\"token punctuation\">,</span>img<span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><br><br></p>\n<h2><code class=\"language-text\">parallel</code> 메서드</h2>\n<p>작업들을 조합하며 실행하는 메서드로 <strong>서로 관련없이</strong> 실행한다. 병렬구조</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>tasks<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>tasks : 실행할 작업들</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span>css<span class=\"token punctuation\">,</span> js<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><br><br></p>\n<h4>3-3. sass 설치</h4>\n<p>이제 원하는 플러그인들을 설치해보자.\n우리가 gulp를 사용하는 이유는 다양하지만 제일 큰 이유는 sass를 사용하기 위함이 아닌가 싶다.<br>\nsass를 사용하기 위해선 빌드 시스템이 필요하기 때문이다. </p>\n<p>나는 dartSass를 설치한다.\n이유는 없다 그냥 따라해라 (나중에 설명함)</p>\n<p>아래와 같이 선언해주면 된다.</p>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/gulp-dart-sass\">gulp-dart-sass의 자세한 사용방법</a></li>\n<li><a href=\"https://github.com/sass/node-sass#options\">sass 옵션</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"teminal\"><pre class=\"language-teminal\"><code class=\"language-teminal\">$ npm install gulp-dart-sass --save-dev</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// gulpfile.js</span>\n<span class=\"token keyword\">const</span> gulp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//require()은 ES6의 import랑 같은 메서드</span>\n<span class=\"token keyword\">const</span> sass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-dart-sass'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n<span class=\"token keyword\">function</span> <span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/scss/*.scss'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>outputStyle<span class=\"token operator\">:</span> <span class=\"token string\">'compressed'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> sass<span class=\"token punctuation\">.</span>logError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist/css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><br><br></p>\n<h4>3-4. babel 설치</h4>\n<p>그 다음은 javascript ES6버전이후를 사용하기 위한 babel을 설치해준다.</p>\n<p>아래와 같이 선언해주면 된다.</p>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/gulp-babel\">gulp-babel의 자세한 사용방법</a>  </li>\n<li><a href=\"https://babeljs.io/docs/en/options\">babel 옵션</a>  </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"teminal\"><pre class=\"language-teminal\"><code class=\"language-teminal\">$ npm install --save-dev gulp-babel @babel/core @babel/preset-env</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// gulpfile.js</span>\n<span class=\"token keyword\">const</span> gulp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//require()은 ES6의 import랑 같은 메서드</span>\n<span class=\"token keyword\">const</span> babel <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-babel'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">js</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/js/*.js'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">babel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dist/js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><br><br></p>\n<h4>3-5. browser-sync 설치</h4>\n<p>작업을 하며 일일히 저장하고 실행하기 번거롭다...<br>\n이러한 불편함을 극복하기 위해 browser-sync 플러그인을 설치해주면 되는데<br>\n파일이 바뀔 때 마다 실시간으로 반영해준다.</p>\n<ul>\n<li><a href=\"https://browsersync.io/docs/options/\">browsersync 옵션</a>  </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">$ npm install browser-sync --save-dev</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> browsersync <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"browser-sync\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//browser-sync 호출</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">server</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">done</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> browsersync<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\t\tport<span class=\"token operator\">:</span><span class=\"token number\">8030</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//실행할 로컬 포트를 정해준다.</span>\n\t\tserver<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\tbaseDir<span class=\"token operator\">:</span> <span class=\"token string\">'./dist/'</span> <span class=\"token comment\">//실행할 기본 파일</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">watchFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  gulp<span class=\"token punctuation\">.</span><span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src/*.html'</span><span class=\"token punctuation\">,</span> browserSyncReload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> watch <span class=\"token operator\">=</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>build<span class=\"token punctuation\">,</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span>watchFiles<span class=\"token punctuation\">,</span> server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><br><br></p>\n<h4>4. build</h4>\n<p>마지막으로 빌드하면 끝!!!!\n폴더구조는 내 마음대로지만 원하는 입맛대로 바꾸면 되니 참고만 해주셈요  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">const</span> build <span class=\"token operator\">=</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span>css<span class=\"token punctuation\">,</span> js<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> watch <span class=\"token operator\">=</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>build<span class=\"token punctuation\">,</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span>watchFiles<span class=\"token punctuation\">,</span> server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\nexports<span class=\"token punctuation\">.</span>build <span class=\"token operator\">=</span> build<span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span>watch <span class=\"token operator\">=</span> watch<span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span>default <span class=\"token operator\">=</span> watch<span class=\"token punctuation\">;</span></code></pre></div>\n<p>일단은 내가 사용한 기본 플러그인들은 설정되었다.<br>\n취향에 맞게 플러그인을 추가하고 제거할 수 있으며<br>\n위의 것들은 정말 기본이라서 웬만하면 삭제 안하고 쭉 쓸 것 같다.</p>\n<p><br><br><br></p>\n<blockquote>\n<p><subtitle> refernece</p>\n</blockquote>\n<ul>\n<li><a href=\"https://gulpjs.com/\">https://gulpjs.com/</a></li>\n</ul>","frontmatter":{"title":"Gulp.js - 시작하기","date":"2021-01-14","image":"test"},"id":"d62c36bb-3dc2-5b42-8d6f-7a73c82f7868"}},"pageContext":{"slug":"/posts/2021-01-14-gulp-1/"}},"staticQueryHashes":["1707471100","3159585216","35752167"]}