{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2019-12-06-object-1/","result":{"data":{"markdownRemark":{"html":"<h1>1. 객체(Object)의 기본정의</h1>\n<p>자바스크립트는 객체(Object)기반의 스크 립트 언어로 숫자, 문자열, 불리언, undefined 타입을 제외한 모든 것이 객체이다.<br>\n하지만 숫자, 문자열, 불리언과 같은 원시 타입은 값이 정해진 객체로 취급되어, 객체로서의 특징도 함께 가진다.</p>\n<p>객체란 여러 속성을 하나의 변수에 저장할 수 있도록 해주는 데이터 형식으로,<br>\n객체를 구성하는 요소는 <strong>프로퍼티</strong>와 <strong>메소드</strong>가 있다.</p>\n<p><br><br><br></p>\n<h1>2. 프로퍼티(Property)</h1>\n<p>프로퍼티는 객체의 일부로 이름(name)과 값(value)으로 구성된 정렬되지 않은 집합이다.<br>\n이 프로퍼티의 접근 연산자는 '.'로, 이 연산자를 통해 프로퍼티를 추가, 접근할 수 있다.</p>\n<h4>문법</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">객체이름<span class=\"token punctuation\">.</span>프로퍼티이름\nor\n객체이름<span class=\"token punctuation\">[</span><span class=\"token string\">\"프로퍼티이름\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tname<span class=\"token operator\">:</span> <span class=\"token string\">\"이푸름\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 이름 프로퍼티를 정의함</span>\n\tbirthday<span class=\"token operator\">:</span> <span class=\"token string\">\"1104\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//생일 프로퍼티를 정의함</span>\n<span class=\"token punctuation\">}</span>\n\nperson<span class=\"token punctuation\">.</span>name <span class=\"token comment\">// 이푸름</span>\nperson<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 이푸름</span></code></pre></div>\n<p>만약 프로퍼티에 아무런 값도 할당하지 않는 다면, 자바스크립트 엔진이 강제적으로 undefined를 할당한다.<br>\n하지만 프로퍼티는 값이 할당되지 않으면 존재할 필요가 없기때문에 <strong>syntax error</strong> 이다.</p>\n<p>또 한 가지 자바스크립트의 프로퍼티는 undefined 나 null을 할당한다고 삭제되지 않는다.\n프로퍼티의 삭제는 delete라는 keyword를 사용하여야 한다.</p>\n<p><br><br><br></p>\n<h1>3. 메소드(method)</h1>\n<p>메소드는 객체가 가지고 있는 동작이다. 그 동작을 수행하기 위해서 객체의 정보를 담고있는 프로퍼티를 사용 할 수 있다.</p>\n<h4>문법</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">객체이름<span class=\"token punctuation\">.</span><span class=\"token function\">메소드이름</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name <span class=\"token operator\">:</span> <span class=\"token string\">\"이푸름\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 이름 프로퍼티를 정의함</span>\n  birthday <span class=\"token operator\">:</span> <span class=\"token string\">\"1104\"</span> <span class=\"token comment\">//생일 프로퍼티를 정의함</span>\n  pId <span class=\"token operator\">:</span> <span class=\"token string\">\"1234567\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">fullId</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>birthday <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pId<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">fullId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 11041234567</span>\nperson<span class=\"token punctuation\">.</span>fullId <span class=\"token comment\">// function(){return this.birthday + this.pId;}</span></code></pre></div>\n<p>간혹 함수와 메소드가 같은 동작을 한다고 해서 같다고 생각하는 사람들도 많은데, 이 두 항목의 차이를 살펴보겠다.</p>\n<p>메소드를 수행하기 위해서는객체를 통해서 해당 메소드를 수행하여야 한다.<br>\n즉, 그 동작을 수행하는 주체는 개체이며 그 동장을 수행하기 위해서는 객체에게 그 동작을 <strong>수행하라고 지시해야한다</strong>.</p>\n<p>함수는 그 동작을 수행하기 위해 객체에게 어떤 동작을 수행하라고 <strong>명령하지 않아도 된다</strong>.<br>\n그 이유는 함수 자체가 그 동작을 정의한 함수객체이기 때문에 자기 자신을 수행하는 것이다.</p>\n<p><br><br><br><br><br></p>\n<blockquote>\n<p><subtitle> refernece</p>\n</blockquote>\n<ul>\n<li><a href=\"http://tcpschool.com/javascript\">http://tcpschool.com/javascript</a></li>\n<li><a href=\"http://insanehong.kr/post/javascript-object/\">http://insanehong.kr/post/javascript-object/</a></li>\n</ul>","frontmatter":{"title":"자바스크립트 - 객체(Object)의 개념","date":"2019-12-06","image":null},"id":"89ca4c1f-6879-5e3c-91d5-96b13ab1f90f"}},"pageContext":{"slug":"/posts/2019-12-06-object-1/"}},"staticQueryHashes":["1707471100","3159585216","35752167"]}