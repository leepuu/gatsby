{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2021-03-05-youtube-1/","result":{"data":{"markdownRemark":{"html":"<h1>🎬 Youtube Player API란?</h1>\n<blockquote>\n<p>웹 사이트에 Youtube 동영상 플레이어를 렌더링하며 Javascript를 사용하여 제어할 수 있도록 도와주는 API<br>\n줄여서 YT.player라고도 합니다.</p>\n</blockquote>\n<br>\n<p>프로젝트를 진행하면서 <code>&#x3C;video></code> 태그가 아닌 Youtube 동영상을 가져오는 경우가 많다.<br>\n이런 경우 해당 API를 사용하여 재생, 일시정지 등 <strong>다양한 컨트롤</strong>이 가능하기 때문에, 소개해보려 합니다 ㅎㅎ</p>\n<h1>🎬 Youtube를 렌더링하는 방법</h1>\n<p>Youtube 동영상을 렌더링하는 방법은 총 2가지가 있습니다.<br>\n아래 두가지 모두를 소개하도록 하겠습니다~</p>\n<h2>1️⃣<code>&#x3C;iframe></code> 태그 사용하기</h2>\n<h3>사용 방법</h3>\n<deckgo-highlight-code language=\"html\"  terminal=\"carbon\" theme=\"one-dark\" >\n          <code slot=\"code\">// videoId는 load할 영상의 id값\n&lt;iframe src=&quot;https://www.youtube.com/embed/VIDEO_ID&quot;&gt;&lt;/iframe&gt;</code>\n        </deckgo-highlight-code>\n<h3>특징</h3>\n<ol>\n<li>직접 API를 연결하지 않고, postMessage를 통하여 컨트롤합니다.</li>\n<li>\n<p>제어하기 위해선 아래 속성값이 필수</p>\n<deckgo-highlight-code language=\"javascript\"  terminal=\"carbon\" theme=\"one-dark\" >\n          <code slot=\"code\">// enablejsapi은 IFrame 또는 JavaScript Player API 호출\n// allow=&quot;autoplay;&quot;는 jacascript로 제어시 재생할 수 있도록 허용\n&lt;iframe src=&quot;https://www.youtube.com/embed/VIDEO_ID?enablejsapi=1&quot; allow=&quot;autoplay;&quot;&gt;&lt;/iframe&gt;</code>\n        </deckgo-highlight-code>\n</li>\n<li>\n<p>Javascript로 제어하기 위해선 아래와 같은 callPlayer 함수 필요합니다.</p>\n<deckgo-highlight-code language=\"javascript\"  terminal=\"carbon\" theme=\"one-dark\" >\n          <code slot=\"code\">function callPlayer(frame_id, func, args) {\n    // jquery를 사용할 때\n    if (window.jQuery &amp;&amp; frame_id instanceof jQuery) frame_id = frame_id.get(0).id;\n\n    const iframe = document.getElementById(frame_id);\n\n    //태그의 값이 iframe이 아닐 경우 iframe으로 변경\n    if (iframe &amp;&amp; iframe.tagName.toUpperCase() != &quot;IFRAME&quot;) {\n        iframe = iframe.getElementsByTagName(&quot;iframe&quot;)[0];\n    }\n\n    if (iframe) {\n        iframe.contentWindow.postMessage(JSON.stringify({\n        event: &quot;command&quot;,\n        func: func,\n        args: args || [],\n        id: frame_id\n        }), &quot;*&quot;);\n    }\n}</code>\n        </deckgo-highlight-code>\n</li>\n</ol>\n<h3>window.postMessage</h3>\n<p><strong><em>iframe이란</em></strong></p>\n<blockquote>\n<p>Inline Frame의 약자로, 현재 문서 안에 다른 HTML 페이지를 삽입하는 요소</p>\n</blockquote>\n<ul>\n<li>window.postMessage를 이용하면 iframe 안의 HTML 페이지와 메세지를 주고 받을 수 있습니다. (통신이 가능해짐)</li>\n</ul>\n<deckgo-highlight-code language=\"javascript\"  terminal=\"carbon\" theme=\"one-dark\" >\n          <code slot=\"code\">targetWindow.postMessage(message, targetOrigin);</code>\n        </deckgo-highlight-code>\n<ol>\n<li><strong>targetWindow</strong> : 메세지를 전달 받을 window의 참조 (postMessage를 보낼 대상)</li>\n<li><strong>message</strong> : <strong>targetWindow</strong>에 보내질 데이터로 String으로 한정 </li>\n<li><strong>targetOrigin</strong> :  메세지를 전송받을 대상의 도메인, ,특정 도메인이 아니라면 *로 지정</li>\n</ol>\n<br>\n<br>\n<h2>2️⃣ Youtube Player API 사용</h2>\n<h3>사용 방법</h3>\n<deckgo-highlight-code language=\"html\"  terminal=\"carbon\" theme=\"one-dark\" >\n          <code slot=\"code\">&lt;div id=&quot;ytplayer&quot;&gt;&lt;/div&gt;</code>\n        </deckgo-highlight-code>\n<deckgo-highlight-code language=\"javascript\"  terminal=\"carbon\" theme=\"one-dark\" >\n          <code slot=\"code\">//Iframe Player API를 비동기식으로 load\nvar tag = document.createElement(&#39;script&#39;);        \ntag.src = &quot;https://www.youtube.com/player_api&quot;;\nvar firstScriptTag = document.getElementsByTagName(&#39;script&#39;)[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\nvar player;\n\n//Iframe Player API가 load된 후 실행\nfunction onYouTubePlayerAPIReady() {\n\t\t//ytplayer는 id 값을 의미\n    player = new YT.Player(&#39;ytplayer&#39;, {\n\t\t\t\t//videoId는 load할 영상의 id값\n        videoId: &#39;ZqdCFnEsEVU&#39;,                \n    });\n}</code>\n        </deckgo-highlight-code>\n<h3>특징</h3>\n<ol>\n<li>div 태그는 youtube 동영상 플레이어가 삽입될 위치를 식별합니다.</li>\n<li>API는 div 태그를 iframe 태그로 대체하며 또는 직접 iframe 요소를 삽입할 수 있습니다.</li>\n</ol>\n<h1>🎬 2가지 방법 비교</h1>\n<h2>1. 속도</h2>\n<p>개발자도구의 Network에서 <strong>Slow 3G</strong> 환경에서 테스트를 해보았을 때</p>\n<p><img src=\"/posts/youtube/youtube1.png\" alt=\"속도 비교\"></p>\n<p>첫번째는 <code>&#x3C;iframe></code> 태그 두번째는 IFrame Player API을 사용한 것으로 로딩 속도는 같습니다.</p>\n<p><br><br><br></p>\n<blockquote>\n<p><subtitle>reference</subtitle></p>\n</blockquote>\n<ul>\n<li><a href=\"https://edu.goorm.io/learn/lecture/16422/%EA%B0%80%EC%9E%A5-%ED%95%AB%ED%95%9C-fe-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-react-%EA%B0%80%25qweddEC%A7%80%EA%B3%A0-%EB%86%80%EC%95%84%EB%B3%B4%EA%B8%B0/\">https://edu.goorm.io/learn/lecture/16422/%EA%B0%80%EC%9E%A5-%ED%95%AB%ED%95%9C-fe-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-react-%EA%B0%80%qweddEC%A7%80%EA%B3%A0-%EB%86%80%EC%95%84%EB%B3%B4%EA%B8%B0/</a></li>\n<li>&#x3C;리액트를 다루는 기술 - 길벗></li>\n</ul>","frontmatter":{"title":"[Youtube] Youtube Player API - 1","date":"2021-03-05","image":"youtube"},"id":"5d2ab182-cc8c-5e12-991d-aba824da0155"}},"pageContext":{"slug":"/posts/2021-03-05-youtube-1/"}},"staticQueryHashes":["1707471100","3159585216","35752167"]}