{"componentChunkName":"component---src-templates-post-view-js","path":"/posts/2020-01-21-react-99/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p><subtitle> props 와 state </subtitle><br>\n리액트 컴포넌트에서 다루는 데이터로, 둘다 값이 변경 될 때 마다 비동기적으로 업데이트된다.</p>\n</blockquote>\n<h4>컴포넌트</h4>\n<pre><code class=\"language-javascript\"></code></pre>\n<h1>1. props</h1>\n<p>부모 컴포넌트가 자식 컴포넌트에 전달하는 값으로, 자식 컴포넌트에서는 데이터 변경이 불가능하다.<br>\n외부에서 컴포넌트를 사용하기 위한 <strong>정적 데이터</strong>로, 변하지 않는 값으로 사용된다.\n<br></p>\n<pre><code class=\"language-javascript\">class App extends Component {\n    render() {\n        return &#x3C;Fruit name=\"apple\" />\n    }\n}\n\nclass Fruit extends Component {\n    render() {\n        return &#x3C;div>과일 이름은 {this.props.name} 입니다.&#x3C;/div>\n    }\n}\n</code></pre>\n<p><br><br></p>\n<h2>defaultProps</h2>\n<p>props의 기본값으로, props에 값이 주어지지 않았을 때 적용되는 값이다.\n<br></p>\n<pre><code class=\"language-javascript\">class Fruit extends Component {\n    static defaultProps = {\n        name: \"none\",\n    }\n\n    render() {\n        return &#x3C;div>과일 이름은 {this.props.name} 입니다.&#x3C;/div>\n    }\n}\n</code></pre>\n<p><br><br><br></p>\n<h1>2. state</h1>\n<p>컴포넌트 내에서 선언하는 값으로, 데이터 변경이 가능하다.<br>\n내부에서 컴포넌트를 구현하기 위한 <strong>동적 데이터</strong>로, 유동적인 값을 처리할 때 사용된다.<br>\n<br></p>\n<pre><code class=\"language-javascript\">class Fruit extends Component {\n  state = {\n    fruit: 'apple'\n  };\n\n  render(){\n    return(\n      &#x3C;div>과일 이름은 {this.state.fruit} 입니다.&#x3C;/div>;\n    )\n  }\n}\n</code></pre>\n<p><br><br></p>\n<h2>setState</h2>\n<p>변수값 변경과는 다르게 state의 값을 변경할 때 필요한 요소이다.\n<br></p>\n<h4>문법</h4>\n<pre><code class=\"language-javascript\">this.setState((state) => ({key: value})\nthis.setState(({key})) => ({key: value}) // 비구조화 할당\nthis.setState({key: value})\n</code></pre>\n<pre><code class=\"language-javascript\">class Fruit extends Component {\n    state = {\n        fruit: \"apple\",\n    }\n\n    banana = () => {\n        this.setState({\n            fruit: \"banana\",\n        })\n    }\n\n    render() {\n        return (\n            &#x3C;div>\n                &#x3C;div>과일 이름은 {this.state.fruit} 입니다.&#x3C;/div>;&#x3C;button onClick={this.banana}>Change&#x3C;/button>\n            &#x3C;/div>\n        )\n    }\n}\n</code></pre>\n<blockquote>\n<p><subtitle>reference</subtitle></p>\n</blockquote>\n<ul>\n<li><a href=\"https://velopert.com/3629\">https://velopert.com/3629</a></li>\n<li><a href=\"https://github.com/cliche90/markdown_tutorial\">https://github.com/cliche90/markdown_tutorial</a></li>\n<li><a href=\"https://heropy.blog/2017/09/30/markdown/\">https://heropy.blog/2017/09/30/markdown/</a></li>\n</ul>","frontmatter":{"title":"React.js - props 와 state","date":"2020-01-21"},"id":"fe579c01-d6ab-587e-a542-9201524b0a7d"}},"pageContext":{"slug":"/posts/2020-01-21-react-99/"}}}